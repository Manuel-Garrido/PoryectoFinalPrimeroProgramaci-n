/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfazgrafica;

import conexion.ConexionBaseDatos;
import herencias.Idiomas;
import interfacespropias.Sonidos;
import java.applet.AudioClip;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.URL;
import javax.swing.JOptionPane;

/**
 *
 * @author ShibaXpath
 */
public final class CrearEmergencia extends Idiomas implements Sonidos {

    private final Plataforma plata;
    private final ConexionBaseDatos cn;
    private String nombreUsuario;

    /**
     * Creates new form InicioApp
     */
    public CrearEmergencia() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Kizuna App");
        setResizable(false);
        setIconImage(getIconImage());
        plata = new Plataforma();
        cn = new ConexionBaseDatos();
        nombreUsuario = "";
        crear.setMnemonic(KeyEvent.VK_ENTER);
    }

    public void setNombreUsuario(String nombreUsuario) {
        this.nombreUsuario = nombreUsuario;
    }

    @Override
    public Image getIconImage() {
        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/miicono.jpg"));

        return icono;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prioridad = new javax.swing.ButtonGroup();
        fondo = new javax.swing.JPanel();
        seleccionar = new javax.swing.JCheckBox();
        descripcion = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        nombreCaso = new javax.swing.JTextField();
        tipo = new javax.swing.JLabel();
        tipos = new javax.swing.JComboBox<>();
        prio = new javax.swing.JLabel();
        alto = new javax.swing.JRadioButton();
        medio = new javax.swing.JRadioButton();
        bajo = new javax.swing.JRadioButton();
        crear = new javax.swing.JButton();
        volver = new javax.swing.JButton();
        scroll1 = new javax.swing.JScrollPane();
        campoMensaje = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        imagen = new javax.swing.JLabel();
        menuRegistro = new javax.swing.JMenuBar();
        archivo = new javax.swing.JMenu();
        salida = new javax.swing.JMenuItem();
        idiomas = new javax.swing.JMenu();
        español = new javax.swing.JMenuItem();
        japones = new javax.swing.JMenuItem();

        prioridad.add(alto);
        prioridad.add(medio);
        prioridad.add(bajo);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1220, 690));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fondo.setBackground(new java.awt.Color(204, 204, 204));
        fondo.setPreferredSize(new java.awt.Dimension(610, 640));
        fondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        seleccionar.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        seleccionar.setText("ELEGIR EL CASO PARA USTED");
        seleccionar.setFocusable(false);
        fondo.add(seleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, -1, -1));

        descripcion.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        descripcion.setForeground(new java.awt.Color(0, 0, 0));
        descripcion.setText("DESCRIPCIÓN DEL CASO:(Max 240)");
        fondo.add(descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        nombre.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        nombre.setForeground(new java.awt.Color(0, 0, 0));
        nombre.setText("NOMBRE DEL CASO:");
        fondo.add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        nombreCaso.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        nombreCaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreCasoActionPerformed(evt);
            }
        });
        fondo.add(nombreCaso, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 200, 30));

        tipo.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        tipo.setForeground(new java.awt.Color(0, 0, 0));
        tipo.setText("TIPO DE EMERGENCIA:");
        fondo.add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, 20));

        tipos.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        tipos.setFocusable(false);
        fondo.add(tipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 290, 30));

        prio.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        prio.setForeground(new java.awt.Color(0, 0, 0));
        prio.setText("NIVEL DE PRIORIDAD:");
        fondo.add(prio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        alto.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        alto.setSelected(true);
        alto.setText("Alto");
        alto.setFocusable(false);
        fondo.add(alto, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        medio.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        medio.setText("Medio");
        medio.setFocusable(false);
        fondo.add(medio, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, -1));

        bajo.setFont(new java.awt.Font("NSimSun", 0, 14)); // NOI18N
        bajo.setText("Bajo");
        bajo.setFocusable(false);
        fondo.add(bajo, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, -1, -1));

        crear.setBackground(new java.awt.Color(255, 0, 51));
        crear.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        crear.setForeground(new java.awt.Color(255, 255, 255));
        crear.setText("CREAR EMERGENCIA");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });
        fondo.add(crear, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 560, 210, 60));

        volver.setBackground(new java.awt.Color(255, 0, 51));
        volver.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        volver.setForeground(new java.awt.Color(255, 255, 255));
        volver.setText("VOLVER");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        fondo.add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 140, 60));

        campoMensaje.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        campoMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoMensajeActionPerformed(evt);
            }
        });
        scroll1.setViewportView(campoMensaje);

        fondo.add(scroll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 570, 250));

        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 640));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 640));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 0, 610, 640));

        archivo.setText("Archivo");

        salida.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        salida.setText("Salir");
        salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salidaActionPerformed(evt);
            }
        });
        archivo.add(salida);

        menuRegistro.add(archivo);

        idiomas.setText("Idiomas");

        español.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        español.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/espaicon.png"))); // NOI18N
        español.setText("Español");
        español.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                españolActionPerformed(evt);
            }
        });
        idiomas.add(español);

        japones.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.ALT_DOWN_MASK));
        japones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/japoicon.png"))); // NOI18N
        japones.setText("日本語");
        japones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                japonesActionPerformed(evt);
            }
        });
        idiomas.add(japones);

        menuRegistro.add(idiomas);

        setJMenuBar(menuRegistro);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void japonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_japonesActionPerformed
        cambiarIdioma(false);
        super.setBandera(false);
    }//GEN-LAST:event_japonesActionPerformed

    private void españolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_españolActionPerformed
        cambiarIdioma(true);
        super.setBandera(true);
    }//GEN-LAST:event_españolActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        reproducirSonidoBoton(); // Reproduce un sonido relacionado con el botón presionado

        plata.setBandera(super.isBandera()); // Establece la bandera en la instancia "plata" con el valor de la bandera de la clase actual

        plata.cambiarIdioma(super.isBandera()); // Cambia el idioma en la instancia "plata" según el valor de la bandera de la clase actual

        plata.setNombreUsuario(nombreUsuario); // Establece el nombre de usuario en la instancia "plata" con el valor de la variable "nombreUsuario"

        this.dispose(); // Cierra la ventana actual

        plata.setVisible(true); // Hace visible la ventana representada por la instancia "plata"

    }//GEN-LAST:event_volverActionPerformed

    private void salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salidaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salidaActionPerformed

    private void crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearActionPerformed
        reproducirSonidoBoton(); // Reproduce un sonido relacionado con el botón presionado

String pais = "";
if (super.isBandera()) {
    pais = "ESP"; // Establece el valor de "pais" como "ESP" si la bandera es verdadera
} else {
    pais = "JP"; // Establece el valor de "pais" como "JP" si la bandera es falsa
}

switch (pais) {
    case "ESP": // Caso para el país "ESP"
        if (seleccionar.isSelected() && cn.devolverCasoUsuario(nombreUsuario)) {
            // Muestra un mensaje de error si el checkbox "seleccionar" está seleccionado y el método "devolverCasoUsuario" devuelve verdadero
            JOptionPane.showMessageDialog(null, "Ya estás asignado a un caso.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        } else if (seleccionar.isSelected() || !seleccionar.isSelected()) {
            if (cn.comprobarCaso(nombreCaso.getText())) {
                // Muestra un mensaje de error si el método "comprobarCaso" devuelve verdadero para el nombre del caso ingresado
                JOptionPane.showMessageDialog(null, "Ya existe una emergencia con ese nombre.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (nombreCaso.getText().length() == 0 || nombreCaso.getText().length() > 20) {
                    // Muestra un mensaje de error si el nombre del caso tiene una longitud de 0 o superior a 20 caracteres
                    JOptionPane.showMessageDialog(null, "Nombre de emergencia no válido.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else if (campoMensaje.getText().length() > 240) {
                    // Muestra un mensaje de error si la descripción tiene una longitud superior a 240 caracteres
                    JOptionPane.showMessageDialog(null, "Su descripción supera los 240 caracteres.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                } else {
                    String nivel = "";
                    if (alto.isSelected()) {
                        nivel = "Alto";
                    } else if (medio.isSelected()) {
                        nivel = "Medio";
                    } else if (bajo.isSelected()) {
                        nivel = "Bajo";
                    }

                    String estado = "";
                    if (seleccionar.isSelected()) {
                        estado = "En curso";
                    } else {
                        estado = "Sin seleccionar";
                    }

                    int valor = JOptionPane.showConfirmDialog(null, "¿Está usted seguro de crear el caso?", "Mensaje de pregunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (valor == JOptionPane.YES_OPTION) {
                        // Inserta la emergencia en la base de datos con los valores proporcionados
                        cn.insetarEmergencia(nombreCaso.getText(), nivel, tipos.getSelectedItem().toString(), campoMensaje.getText(), nombreUsuario, estado, "ESP");
                        if (estado.equals("En curso")) {
                            cn.modificarCasoUsuario(cn.devolverID_Caso(nombreCaso.getText()), nombreUsuario);
                            cn.modificarCaso(cn.devolverID_Usuario(nombreUsuario), nombreCaso.getText());
                        }

                        plata.setBandera(super.isBandera());
                        plata.cambiarIdioma(super.isBandera());
                        plata.setNombreUsuario(nombreUsuario);
                        this.dispose();
                        plata.setVisible(true);
                    }
                }
            }
        }
        break;
    case "JP": // Caso para el país "JP"
        if (seleccionar.isSelected() && cn.devolverCasoUsuario(nombreUsuario)) {
            // Muestra un mensaje de error si el checkbox "seleccionar" está seleccionado y el método "devolverCasoUsuario" devuelve verdadero
            JOptionPane.showMessageDialog(null, "すでにケースに割り当てられています。", "エラーメッセージ", JOptionPane.ERROR_MESSAGE);
        } else if (seleccionar.isSelected() || !seleccionar.isSelected()) {
            if (cn.comprobarCaso(nombreCaso.getText())) {
                // Muestra un mensaje de error si el método "comprobarCaso" devuelve verdadero para el nombre del caso ingresado
                JOptionPane.showMessageDialog(null, "その名前の緊急事態は既に存在しています。", "エラーメッセージ", JOptionPane.ERROR_MESSAGE);
            } else {
                if (nombreCaso.getText().length() == 0 || nombreCaso.getText().length() > 20) {
                    // Muestra un mensaje de error si el nombre del caso tiene una longitud de 0 o superior a 20 caracteres
                    JOptionPane.showMessageDialog(null, "緊急事態名が無効です。", "エラーメッセージ", JOptionPane.ERROR_MESSAGE);
                } else if (campoMensaje.getText().length() > 240) {
                    // Muestra un mensaje de error si la descripción tiene una longitud superior a 240 caracteres
                    JOptionPane.showMessageDialog(null, "説明が240文字を超えています。", "エラーメッセージ", JOptionPane.ERROR_MESSAGE);
                } else {
                    String nivel = "";
                    if (alto.isSelected()) {
                        nivel = "高";
                    } else if (medio.isSelected()) {
                        nivel = "中";
                    } else if (bajo.isSelected()) {
                        nivel = "低";
                    }

                    String estado = "";
                    if (seleccionar.isSelected()) {
                        estado = "進行中";
                    } else {
                        estado = "未選択";
                    }

                    int valor = JOptionPane.showConfirmDialog(null, "ケースを作成してもよろしいですか？", "質問メッセージ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (valor == JOptionPane.YES_OPTION) {
                        // Inserta la emergencia en la base de datos con los valores proporcionados
                        cn.insetarEmergencia(nombreCaso.getText(), nivel, tipos.getSelectedItem().toString(), campoMensaje.getText(), nombreUsuario, estado, "JP");
                        if (estado.equals("進行中")) {
                            cn.modificarCasoUsuario(cn.devolverID_Caso(nombreCaso.getText()), nombreUsuario);
                            cn.modificarCaso(cn.devolverID_Usuario(nombreUsuario), nombreCaso.getText());
                        }

                        plata.setBandera(super.isBandera());
                        plata.cambiarIdioma(super.isBandera());
                        plata.setNombreUsuario(nombreUsuario);
                        this.dispose();
                        plata.setVisible(true);
                    }
                }
            }
        }
        break;
}


    }//GEN-LAST:event_crearActionPerformed

    private void nombreCasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreCasoActionPerformed
        crear.doClick();
    }//GEN-LAST:event_nombreCasoActionPerformed

    private void campoMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoMensajeActionPerformed
        crear.doClick();
    }//GEN-LAST:event_campoMensajeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton alto;
    private javax.swing.JMenu archivo;
    private javax.swing.JRadioButton bajo;
    private javax.swing.JTextField campoMensaje;
    private javax.swing.JButton crear;
    private javax.swing.JLabel descripcion;
    private javax.swing.JMenuItem español;
    private javax.swing.JPanel fondo;
    private javax.swing.JMenu idiomas;
    private javax.swing.JLabel imagen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem japones;
    private javax.swing.JRadioButton medio;
    private javax.swing.JMenuBar menuRegistro;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField nombreCaso;
    private javax.swing.JLabel prio;
    private javax.swing.ButtonGroup prioridad;
    private javax.swing.JMenuItem salida;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JCheckBox seleccionar;
    private javax.swing.JLabel tipo;
    private javax.swing.JComboBox<String> tipos;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cambiarIdioma(boolean idioma) {

        if (idioma)
        {
            tipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]
            {
                "Incendios estructurales", "Incendios forestales", "Rescates en altura", "Rescates acuáticos", "Accidentes de tráfico", "Materiales peligrosos", "Rescates en espacios confinados"
            }));
            volver.setFont(new java.awt.Font("Roboto", 0, 18));
            crear.setFont(new java.awt.Font("Roboto", 0, 18));
            volver.setText("VOLVER");
            alto.setText("Alto");
            medio.setText("Medio");
            bajo.setText("Bajo");
            archivo.setText("Archivo");
            idiomas.setText("Idiomas");
            salida.setText("Desconectar");
            crear.setText("CREAR EMERGENCIA");
            nombre.setText("NOMBRE DEL CASO:");
            prio.setText("NIVEL DE PRIORIDAD:");
            tipo.setText("TIPO DE EMERGENCIA:");
            seleccionar.setText("ELEGIR EL CASO PARA USTED");
            descripcion.setText("DESCRIPCIÓN DEL CASO:(Max 240)");
            super.setBandera(true);
            imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoCrear.jpg")));
        } else
        {
            imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoCrearJP.jpg")));
            tipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]
            {
                "構造火災", "山火事", "高所救助", "水難救助", "交通事故", "危険物", "閉所救助"
            }));
            volver.setFont(new java.awt.Font("Dialog", 0, 18));
            volver.setText("戻る");
            archivo.setText("アーカイブ");
            idiomas.setText("語");
            salida.setText("ディスコネクト");
            crear.setFont(new java.awt.Font("Dialog", 0, 18));
            descripcion.setText("ケースの説明:（最大240文字）");
            alto.setText("高");
            medio.setText("中");
            nombre.setText("事件名:");
            tipo.setText("緊急事態の種類");
            bajo.setText("低");
            crear.setText("緊急事態を作成する");
            prio.setText("優先度:");
            seleccionar.setText("あなたに適したケースを選んでください");
            super.setBandera(false);
        }
    }

    @Override
    public AudioClip obtenerSonido() {
        AudioClip sonidoBoton;
        URL url = getClass().getResource("/sonidos/raton.wav");
        sonidoBoton = java.applet.Applet.newAudioClip(url);
        return sonidoBoton;
    }

    @Override
    public void reproducirSonidoBoton() {
        obtenerSonido().play();
    }
}
