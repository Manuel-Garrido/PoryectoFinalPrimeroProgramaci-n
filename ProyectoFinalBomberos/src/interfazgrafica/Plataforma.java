/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfazgrafica;

import aplicacion.Mensajes;
import conexion.ConexionBaseDatos;
import herencias.Idiomas;
import interfacespropias.Sonidos;
import java.applet.AudioClip;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.net.URL;
import javax.swing.JOptionPane;

/**
 *
 * @author ShibaXpath
 */
public class Plataforma extends Idiomas implements Sonidos, WindowListener {

    private int fondos;
    private ConexionBaseDatos cn;
    private String nombreUsuario, sexoUsuario;
    private Mensajes m;

    /**
     * Creates new form InicioApp
     */
    public Plataforma() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Kizuna App");
        setResizable(false);
        setIconImage(getIconImage());
        perfilUsuario.setVisible(false);
        nombreUsuario = "";
        cn = new ConexionBaseDatos();
        sexoUsuario = "";
        fondos = 0;
        m = new Mensajes();
        addWindowListener(this);
    }

    public void setNombreUsuario(String nombreUsuario) {
        this.nombreUsuario = nombreUsuario;
    }

    @Override
    public Image getIconImage() {
        Image icono = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/miicono.jpg"));

        return icono;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plataformaFondo = new javax.swing.JPanel();
        inicio = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        perfilUsuario = new javax.swing.JPanel();
        usuario = new javax.swing.JLabel();
        tipoBombero = new javax.swing.JLabel();
        campoTipo = new javax.swing.JTextField();
        caso = new javax.swing.JLabel();
        campoCaso = new javax.swing.JTextField();
        email = new javax.swing.JLabel();
        sexo = new javax.swing.JLabel();
        fotoPersona = new javax.swing.JLabel();
        campoSexo = new javax.swing.JTextField();
        campoUsuario = new javax.swing.JTextField();
        campoEmail = new javax.swing.JTextField();
        finalizar = new javax.swing.JButton();
        info = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        presentacion = new javax.swing.JTextArea();
        mensajes = new javax.swing.JButton();
        perfil = new javax.swing.JButton();
        casos = new javax.swing.JButton();
        fondoTop = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        fondoGlobal = new javax.swing.JLabel();
        menuInicio = new javax.swing.JMenuBar();
        archivo = new javax.swing.JMenu();
        salida = new javax.swing.JMenuItem();
        idiomas = new javax.swing.JMenu();
        español = new javax.swing.JMenuItem();
        japones = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(920, 770));

        plataformaFondo.setBackground(new java.awt.Color(255, 255, 255));
        plataformaFondo.setPreferredSize(new java.awt.Dimension(920, 739));
        plataformaFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inicio.setBackground(new java.awt.Color(255, 0, 51));
        inicio.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        inicio.setForeground(new java.awt.Color(255, 255, 255));
        inicio.setText("INICIO");
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });
        plataformaFondo.add(inicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 270, 50));

        salir.setBackground(new java.awt.Color(255, 0, 51));
        salir.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        salir.setForeground(new java.awt.Color(255, 255, 255));
        salir.setText("CERRAR SESIÓN");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        plataformaFondo.add(salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 650, 270, 50));

        perfilUsuario.setBackground(new java.awt.Color(204, 204, 204));
        perfilUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("PERFIL DE USUARIO"));
        perfilUsuario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        usuario.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        usuario.setForeground(new java.awt.Color(0, 0, 0));
        usuario.setText("USUARIO:");
        perfilUsuario.add(usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        tipoBombero.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        tipoBombero.setForeground(new java.awt.Color(0, 0, 0));
        tipoBombero.setText("TIPO:");
        perfilUsuario.add(tipoBombero, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        campoTipo.setEditable(false);
        campoTipo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        campoTipo.setFocusable(false);
        campoTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTipoActionPerformed(evt);
            }
        });
        perfilUsuario.add(campoTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 170, 30));

        caso.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        caso.setForeground(new java.awt.Color(0, 0, 0));
        caso.setText("CASO ASIGNADO:");
        perfilUsuario.add(caso, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        campoCaso.setEditable(false);
        campoCaso.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        campoCaso.setFocusable(false);
        perfilUsuario.add(campoCaso, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 170, 30));

        email.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        email.setForeground(new java.awt.Color(0, 0, 0));
        email.setText("EMAIL:");
        perfilUsuario.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        sexo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        sexo.setForeground(new java.awt.Color(0, 0, 0));
        sexo.setText("SEXO:");
        perfilUsuario.add(sexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));
        perfilUsuario.add(fotoPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 240, 250));

        campoSexo.setEditable(false);
        campoSexo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        campoSexo.setFocusable(false);
        perfilUsuario.add(campoSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, 170, 30));

        campoUsuario.setEditable(false);
        campoUsuario.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        campoUsuario.setFocusable(false);
        perfilUsuario.add(campoUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 170, 30));

        campoEmail.setEditable(false);
        campoEmail.setFont(new java.awt.Font("NSimSun", 0, 24)); // NOI18N
        campoEmail.setFocusable(false);
        campoEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoEmailActionPerformed(evt);
            }
        });
        perfilUsuario.add(campoEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 170, 30));

        finalizar.setBackground(new java.awt.Color(255, 0, 51));
        finalizar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        finalizar.setForeground(new java.awt.Color(255, 255, 255));
        finalizar.setText("FINALIZAR CASO");
        finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizarActionPerformed(evt);
            }
        });
        perfilUsuario.add(finalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 180, 40));

        info.setBackground(new java.awt.Color(255, 0, 51));
        info.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        info.setForeground(new java.awt.Color(255, 255, 255));
        info.setText("INFORMACIÓN ADICIONAL");
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });
        perfilUsuario.add(info, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 320, 40));

        plataformaFondo.add(perfilUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, 600, 420));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        presentacion.setEditable(false);
        presentacion.setBackground(new java.awt.Color(204, 204, 204));
        presentacion.setColumns(20);
        presentacion.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        presentacion.setForeground(new java.awt.Color(0, 0, 0));
        presentacion.setRows(5);
        presentacion.setText("¡Bienvenidos! \nNos complace presentarles nuestra innovadora aplicación\nde bomberos, un proyecto creado con dedicación y pasión\npara servir como un puente de unión entre dos grandes\nculturas: Japón y España. Con una interfaz elegante y\nfuncionalidad avanzada, esta aplicación desarrollada en Java\nse ha diseñado para ofrecer una experiencia fluida y\neficiente a nuestros valientes bomberos en ambos países.\n\nEsta innovadora herramienta ha sido desarrollada con el\npropósito de facilitar y mejorar su labor en situaciones\nde emergencia. Con la combinación perfecta de funcionalidad\ny elegancia, esta aplicación multilingüe ofrece una experiencia\nfluida tanto en español como en japonés.");
        presentacion.setFocusable(false);
        presentacion.setSelectionColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(presentacion);

        plataformaFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 550, 320));

        mensajes.setBackground(new java.awt.Color(255, 0, 51));
        mensajes.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        mensajes.setForeground(new java.awt.Color(255, 255, 255));
        mensajes.setText("MENSAJERIA");
        mensajes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensajesActionPerformed(evt);
            }
        });
        plataformaFondo.add(mensajes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 270, 50));

        perfil.setBackground(new java.awt.Color(255, 0, 51));
        perfil.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        perfil.setForeground(new java.awt.Color(255, 255, 255));
        perfil.setText("PERFIL DE USUARIO");
        perfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perfilActionPerformed(evt);
            }
        });
        plataformaFondo.add(perfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 270, 50));

        casos.setBackground(new java.awt.Color(255, 0, 51));
        casos.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        casos.setForeground(new java.awt.Color(255, 255, 255));
        casos.setText("EMERGENCIAS");
        casos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                casosActionPerformed(evt);
            }
        });
        plataformaFondo.add(casos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 270, 50));

        fondoTop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        fondoTop.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 260));

        plataformaFondo.add(fondoTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 870, 250));
        plataformaFondo.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 290, 60));

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        plataformaFondo.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, 10, 430));

        fondoGlobal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoPlata.png"))); // NOI18N
        plataformaFondo.add(fondoGlobal, new org.netbeans.lib.awtextra.AbsoluteConstraints(-100, -210, 1020, 930));

        archivo.setText("Archivo");

        salida.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        salida.setText("Salir");
        salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salidaActionPerformed(evt);
            }
        });
        archivo.add(salida);

        menuInicio.add(archivo);

        idiomas.setText("Idiomas");

        español.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        español.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/espaicon.png"))); // NOI18N
        español.setText("Español");
        español.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                españolActionPerformed(evt);
            }
        });
        idiomas.add(español);

        japones.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.ALT_DOWN_MASK));
        japones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/japoicon.png"))); // NOI18N
        japones.setText("日本語");
        japones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                japonesActionPerformed(evt);
            }
        });
        idiomas.add(japones);

        menuInicio.add(idiomas);

        setJMenuBar(menuInicio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plataformaFondo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plataformaFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 718, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        reproducirSonidoBoton();
        InicioApp inicio = new InicioApp();
        inicio.setBandera(super.isBandera());
        inicio.cambiarIdioma(super.isBandera());
        this.dispose();
        inicio.setVisible(true);
    }//GEN-LAST:event_salirActionPerformed

    private void españolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_españolActionPerformed
        cambiarIdioma(true);
        super.setBandera(true);
        fondos = (int) (Math.random() * 3) + 1;
        switch (fondos)
        {
            case 1:
                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoEsp.png")));
                break;
            case 2:
                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoEsp2.png")));
                break;
            case 3:
                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoEsp3.png")));
                break;
        }
        switch (campoSexo.getText())
        {
            case "男":
                campoSexo.setText("Hombre");
                break;
            case "女性":
                campoSexo.setText("Mujer");
                break;
        }

        switch (campoTipo.getText())
        {
            case "ボランティア消防団":
                campoTipo.setText("Bombero Voluntario");
                break;
            case "消防士":
                campoTipo.setText("Bombero");
                break;
        }
    }//GEN-LAST:event_españolActionPerformed

    private void japonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_japonesActionPerformed
        cambiarIdioma(false);
        super.setBandera(false);
        fondos = (int) (Math.random() * 3) + 1;
        switch (fondos)
        {
            case 1:
                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoJap.png")));
                break;
            case 2:
                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoJap2.png")));
                break;
            case 3:
                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoJap3.png")));
                break;
        }
        switch (campoSexo.getText())
        {
            case "Hombre":
                campoSexo.setText("男");
                break;
            case "Mujer":
                campoSexo.setText("女性");
                break;
        }

        switch (campoTipo.getText())
        {
            case "Bombero Voluntario":
                campoTipo.setText("ボランティア消防団");
                break;
            case "Bombero":
                campoTipo.setText("消防士");
                break;
        }
    }//GEN-LAST:event_japonesActionPerformed

    private void salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salidaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salidaActionPerformed

    private void perfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perfilActionPerformed
        sexoUsuario = cn.devolverSexo(nombreUsuario);
        jScrollPane1.setVisible(false);
        String[] opciones =
        {
            "Ver Perfil", "Modificar Perfil"
        };
        reproducirSonidoBoton();
        int resultado = 0;
        if (super.isBandera())
        {
            resultado = JOptionPane.showOptionDialog(null, "¿Qué desea hacer?", "Mensaje de elección", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

        } else
        {
            String[] opcionesjapo =
            {
                "ユーザープロフィールを見る", "プロファイルデータの変更"
            };
            resultado = JOptionPane.showOptionDialog(null, "どうしたいのか？", "チョイスメッセージ", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcionesjapo, opcionesjapo[0]);
        }
        switch (resultado)
        {
            case 0:
                campoUsuario.setEditable(false);
                campoEmail.setEditable(false);
                campoSexo.setEditable(false);
                campoTipo.setEditable(false);
                perfilUsuario.setVisible(true);
                jScrollPane1.setVisible(false);
                campoTipo.setText(cn.devolverRango(nombreUsuario));
                campoUsuario.setText(nombreUsuario);
                campoEmail.setText(cn.devolverEmail(nombreUsuario));
                campoSexo.setText(sexoUsuario);
                switch (sexoUsuario)
                {
                    case "Hombre":
                        fotoPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/hombre.png")));
                        break;
                    case "男":
                        fotoPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/hombreJapo.png")));
                        break;
                    case "Mujer":
                        fotoPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mujer.png")));
                        break;
                    case "女性":
                        fotoPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mujerJapo.png")));
                        break;
                }
                campoCaso.setText(cn.devolverNombreCaso(cn.devolverIDCasoUsuario(nombreUsuario)));
                if (super.isBandera())
                {
                    switch (campoSexo.getText())
                    {
                        case "男":
                            campoSexo.setText("Hombre");
                            break;
                        case "女性":
                            campoSexo.setText("Mujer");
                            break;
                    }

                    switch (campoTipo.getText())
                    {
                        case "ボランティア消防団":
                            campoTipo.setText("Bombero Voluntario");
                            break;
                        case "消防士":
                            campoTipo.setText("Bombero");
                            break;
                    }
                } else
                {
                    switch (campoSexo.getText())
                    {
                        case "Hombre":
                            campoSexo.setText("男");
                            break;
                        case "Mujer":
                            campoSexo.setText("女性");
                            break;
                    }

                    switch (campoTipo.getText())
                    {
                        case "Bombero Voluntario":
                            campoTipo.setText("ボランティア消防団");
                            break;
                        case "Bombero":
                            campoTipo.setText("消防士");
                            break;
                    }
                }
                break;
            case 1:
                ModificarDatos modificar = new ModificarDatos();
                reproducirSonidoBoton();
                modificar.setBandera(super.isBandera());
                modificar.cambiarIdioma(super.isBandera());
                this.dispose();
                modificar.setEmailUser(cn.devolverEmail(nombreUsuario));
                modificar.setRangoUser(cn.devolverRango(nombreUsuario));
                modificar.setSexoUser(cn.devolverSexo(nombreUsuario));
                modificar.setNombreUser(nombreUsuario);
                modificar.setVisible(true);
                break;
        }
    }//GEN-LAST:event_perfilActionPerformed


    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        jScrollPane1.setVisible(true);
        reproducirSonidoBoton();
        perfilUsuario.setVisible(false);
    }//GEN-LAST:event_inicioActionPerformed

    private void campoEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoEmailActionPerformed

    private void campoTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTipoActionPerformed

    private void casosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_casosActionPerformed
        int resultado = -1;
        String[] opciones =
        {
            "Crear emergencia", "Ver emergencia más reciente"
        };
        reproducirSonidoBoton();
        if (super.isBandera())
        {
            resultado = JOptionPane.showOptionDialog(null, "¿Qué desea hacer?", "Mensaje de elección", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

        } else
        {
            String[] opcionesJapo =
            {
                "緊急事態を作成する", "最新の緊急事態を表示する"
            };
            resultado = JOptionPane.showOptionDialog(null, "どうしたいのか？", "チョイスメッセージ", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcionesJapo, opcionesJapo[0]);
        }

        switch (resultado)
        {
            case 0:
                // Caso 0: Crear emergencia
                CrearEmergencia ce = new CrearEmergencia();
                ce.cambiarIdioma(super.isBandera());
                ce.setBandera(super.isBandera());
                ce.setNombreUsuario(nombreUsuario);
                this.dispose();
                ce.setVisible(true);
                break;
            case 1:
                // Caso 1: Emergencias operativas para unirse o disponibles
                EmergenciasOperativas eo = new EmergenciasOperativas();
                eo.setNombreUsuario(nombreUsuario);
                eo.cambiarIdioma(super.isBandera());
                eo.setBandera(super.isBandera());
                if (super.isBandera())
                {
                    eo.setDatos(cn.devolverUltimoCaso("ESP"));
                    eo.setIdiomaElegido("ESP");
                } else
                {
                    eo.setDatos(cn.devolverUltimoCaso("JP"));
                    eo.setIdiomaElegido("JP");
                }
                eo.setVisible(true);
                this.dispose();
                break;
        }

    }//GEN-LAST:event_casosActionPerformed

    private void mensajesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensajesActionPerformed
        String[] opciones =
        {
            "Enviar Mensaje", "Ver Últimos Mensajes", "Mostrar el historial de mensajes"
        };
        reproducirSonidoBoton();
        int resultado = 0;
        if (super.isBandera())
        //Si el idioma es español
        {
            resultado = JOptionPane.showOptionDialog(null, "¿Qué desea hacer?", "Mensaje de elección", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            switch (resultado)
            {
                case 0:
    // Caso 0: Enviar mensaje a otro usuario
        try
                    {
                        String usuario = JOptionPane.showInputDialog(null, "Indique el nombre de usuario al que desea enviar el mensaje.", "Mensaje de pregunta", JOptionPane.QUESTION_MESSAGE);
                        if (!usuario.equals(null))
                        {
                            if (nombreUsuario.equals(usuario))
                            {
                                JOptionPane.showMessageDialog(null, "No puede enviarse un mensaje a sí mismo...", "Mensaje de error", JOptionPane.WARNING_MESSAGE);
                            } else if (cn.comprobarUsuario(usuario))
                            {
                                // Configurar el objeto `m` (posiblemente una instancia de la clase `Mensajes`)
                                m.setNombreUsuario(nombreUsuario);
                                m.setUsuario(usuario);
                                m.setBandera(super.isBandera());
                                m.cambiarIdioma(super.isBandera());
                                m.mensajesEnviar();
                                this.dispose();
                            } else
                            {
                                JOptionPane.showMessageDialog(null, "El usuario introducido no fue encontrado...", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                } catch (NullPointerException e)
                {
                    // Manejo de excepción si se cancela la entrada del usuario
                }
                break;

                case 1:
                    // Caso 1: Mensajes últimos 3 recibidos
                    m.setNombreUsuario(nombreUsuario);
                    m.setBandera(super.isBandera());
                    m.cambiarIdioma(super.isBandera());
                    m.mensajesRecibir(cn);
                    this.dispose();
                    break;

                case 2:
                    // Caso 2: Historial de mensajes
                    HistorialMensajes hm = new HistorialMensajes();
                    hm.setNombreUsuario(nombreUsuario);
                    hm.setBandera(super.isBandera());
                    hm.cambiarIdioma(super.isBandera());
                    this.dispose();
                    hm.setVisible(true);
                    break;

            }

        } else
        //Si el idioma es japonés
        {
            String[] opcionesJapo =
            {
                "メッセージを送信する", "最新のメッセージを表示する", "メッセージ履歴を表示する"
            };
            resultado = JOptionPane.showOptionDialog(null, "どうしたいのか？", "チョイスメッセージ", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcionesJapo, opcionesJapo[0]);
            switch (resultado)
            {
                case 0:
    try
                    {
                        // Caso 0: Enviar mensaje a otro usuario
                        String usuario = JOptionPane.showInputDialog(null, "メッセージを送信したいユーザー名を指定してください。", "質問のメッセージ", JOptionPane.QUESTION_MESSAGE);
                        if (!usuario.equals(null))
                        {
                            if (nombreUsuario.equals(usuario))
                            {
                                JOptionPane.showMessageDialog(null, "自分自身にメッセージを送ることはできません...", "エラーメッセージ", JOptionPane.WARNING_MESSAGE);
                            } else if (cn.comprobarUsuario(usuario))
                            {
                                m.setNombreUsuario(nombreUsuario);
                                m.setUsuario(usuario);
                                m.setBandera(super.isBandera());
                                m.cambiarIdioma(super.isBandera());
                                m.mensajesEnviar();
                                this.dispose();
                            } else
                            {
                                JOptionPane.showMessageDialog(null, "入力されたユーザーが見つかりませんでした...", "エラーメッセージ", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                } catch (NullPointerException e)
                {
                    // Se captura una excepción NullPointerException en caso de que se cancele el diálogo de entrada
                }
                break;

                case 1:
                    // Caso 1: Mostrar últimos 3 mensajes
                    m.setNombreUsuario(nombreUsuario);
                    m.setBandera(super.isBandera());
                    m.cambiarIdioma(super.isBandera());
                    m.mensajesRecibir(cn);
                    this.dispose();
                    break;
                case 2:
                    // Caso 2: Mostrar historial de mensajes
                    HistorialMensajes hm = new HistorialMensajes();
                    hm.setNombreUsuario(nombreUsuario);
                    hm.setBandera(super.isBandera());
                    hm.cambiarIdioma(super.isBandera());
                    this.dispose();
                    hm.setVisible(true);
                    break;

            }
        }
    }//GEN-LAST:event_mensajesActionPerformed

    private void finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizarActionPerformed
        if (cn.devolverCasoUsuario(nombreUsuario))
        {
            // Si el usuario tiene un caso activo
            finalizarCaso();
        } else
        {
            if (super.isBandera())
            {
                // Si la bandera es verdadera (idioma español)
                JOptionPane.showMessageDialog(null, "No estás actualmente en un caso activo.", "Mensaje de advertencia", JOptionPane.WARNING_MESSAGE);
            } else
            {
                // Si la bandera es falsa (idioma japonés)
                JOptionPane.showMessageDialog(null, "現在、アクティブなケースには参加していません。", "警告メッセージ", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_finalizarActionPerformed

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        VinculoBomberoVoluntario vbv = new VinculoBomberoVoluntario();
        VinculoBombero vb = new VinculoBombero();
        switch (campoTipo.getText())
        {
            case "Bombero Voluntario":
                vbv.setBandera(super.isBandera());
                vbv.cambiarIdioma(super.isBandera());
                vbv.setUsuario(this.nombreUsuario);
                vbv.setEmail(this.campoEmail.getText());
                vbv.setRango(this.campoTipo.getText());
                vbv.setSexo(this.campoSexo.getText());
                vbv.setHorasVoluntario(this.cn.devolverHoras(nombreUsuario));
                vbv.setCampoMensaje(vbv.devolverDescripcion());
                vbv.setVisible(true);
                this.dispose();
                break;
            case "Bombero":
                vb.setBandera(super.isBandera());
                vb.cambiarIdioma(super.isBandera());
                vb.setUsuario(this.nombreUsuario);
                vb.setEmail(this.campoEmail.getText());
                vb.setRango(this.campoTipo.getText());
                vb.setSexo(this.campoSexo.getText());
                vb.setSalario(cn.devolverSalario(nombreUsuario));
                vb.setCampoMensaje(vb.devolverDescripcion());
                vb.setVisible(true);
                this.dispose();
                break;
            case "ボランティア消防団":
                vbv.setBandera(super.isBandera());
                vbv.cambiarIdioma(super.isBandera());
                vbv.setUsuario(this.nombreUsuario);
                vbv.setEmail(this.campoEmail.getText());
                vbv.setRango(this.campoTipo.getText());
                vbv.setSexo(this.campoSexo.getText());
                vbv.setHorasVoluntario(this.cn.devolverHoras(nombreUsuario));
                vbv.setCampoMensaje(vbv.devolverDescripcion());
                vbv.setVisible(true);
                this.dispose();
                break;
            case "消防士":
                vb.setBandera(super.isBandera());
                vb.cambiarIdioma(super.isBandera());
                vb.setUsuario(this.nombreUsuario);
                vb.setEmail(this.campoEmail.getText());
                vb.setRango(this.campoTipo.getText());
                vb.setSexo(this.campoSexo.getText());
                vb.setSalario(cn.devolverSalario(nombreUsuario));
                vb.setCampoMensaje(vb.devolverDescripcion());
                vb.setVisible(true);
                this.dispose();
                break;
        }
    }//GEN-LAST:event_infoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivo;
    private javax.swing.JTextField campoCaso;
    private javax.swing.JTextField campoEmail;
    private javax.swing.JTextField campoSexo;
    private javax.swing.JTextField campoTipo;
    private javax.swing.JTextField campoUsuario;
    private javax.swing.JLabel caso;
    private javax.swing.JButton casos;
    private javax.swing.JLabel email;
    private javax.swing.JMenuItem español;
    private javax.swing.JButton finalizar;
    private javax.swing.JLabel fondoGlobal;
    private javax.swing.JPanel fondoTop;
    private javax.swing.JLabel fotoPersona;
    private javax.swing.JMenu idiomas;
    private javax.swing.JButton info;
    private javax.swing.JButton inicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JMenuItem japones;
    private javax.swing.JButton mensajes;
    private javax.swing.JMenuBar menuInicio;
    private javax.swing.JButton perfil;
    private javax.swing.JPanel perfilUsuario;
    private javax.swing.JPanel plataformaFondo;
    private javax.swing.JTextArea presentacion;
    private javax.swing.JMenuItem salida;
    private javax.swing.JButton salir;
    private javax.swing.JLabel sexo;
    private javax.swing.JLabel tipoBombero;
    private javax.swing.JLabel usuario;
    // End of variables declaration//GEN-END:variables

    public void cambiarDatos() {
        if (super.isBandera())
        {
            // Si la bandera es verdadera (idioma español)

            // Convertir los valores del campo de sexo
            switch (campoSexo.getText())
            {
                case "男":
                    campoSexo.setText("Hombre");
                    break;
                case "女性":
                    campoSexo.setText("Mujer");
                    break;
            }

            // Convertir los valores del campo de tipo
            switch (campoTipo.getText())
            {
                case "ボランティア消防団":
                    campoTipo.setText("Bombero Voluntario");
                    break;
                case "消防士":
                    campoTipo.setText("Bombero");
                    break;
            }
        } else
        {
            // Si la bandera es falsa (idioma japonés)

            // Convertir los valores del campo de sexo
            switch (campoSexo.getText())
            {
                case "Hombre":
                    campoSexo.setText("男");
                    break;
                case "Mujer":
                    campoSexo.setText("女性");
                    break;
            }

            // Convertir los valores del campo de tipo
            switch (campoTipo.getText())
            {
                case "Bombero Voluntario":
                    campoTipo.setText("ボランティア消防団");
                    break;
                case "Bombero":
                    campoTipo.setText("消防士");
                    break;
            }
        }

    }

    @Override
    public void cambiarIdioma(boolean idioma) {
        if (idioma)
        {
            // Si el idioma es verdadero (ESP)

            // Configuración de la interfaz en español
            inicio.setText("INICIO");
            tipoBombero.setText("RANGO:");
            perfilUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("PERFIL DE USUARIO"));
            usuario.setText("USUARIO: ");
            email.setText("EMAIL: ");
            sexo.setText("SEXO: ");
            archivo.setText("Archivo");
            idiomas.setText("Idiomas");
            salida.setText("Desconectar");
            cambiarDatos();
            salir.setText("SALIR DE LA APLICACIÓN");
            casos.setText("EMERGENCIAS");
            usuario.setFont(new java.awt.Font("Roboto", 0, 18));
            inicio.setFont(new java.awt.Font("Roboto", 0, 18));
            email.setFont(new java.awt.Font("Roboto", 0, 18));
            salir.setFont(new java.awt.Font("Roboto", 0, 18));
            casos.setFont(new java.awt.Font("Roboto", 0, 18));
            perfil.setText("PERFIL DE USUARIO");
            mensajes.setText("MENSAJERIA");
            info.setText("INFORMACIÓN ADICIONAL");
            info.setFont(new java.awt.Font("Roboto", 0, 18));
            perfil.setFont(new java.awt.Font("Roboto", 0, 18));
            tipoBombero.setFont(new java.awt.Font("Roboto", 0, 18));
            sexo.setFont(new java.awt.Font("Roboto", 0, 18));
            campoUsuario.setFont(new java.awt.Font("Roboto", 0, 18));
            campoEmail.setFont(new java.awt.Font("Roboto", 0, 18));
            mensajes.setFont(new java.awt.Font("Roboto", 0, 18));
            finalizar.setText("FINALIZAR EMERGENCIA");
            finalizar.setFont(new java.awt.Font("Roboto", 0, 12));
            caso.setText("CASO ASIGNADO:");
            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoEsp.png")));
            presentacion.setText("¡Bienvenidos! \n"
                    + "Nos complace presentarles nuestra innovadora aplicación\n"
                    + "de bomberos, un proyecto creado con dedicación y pasión\n"
                    + "para servir como un puente de unión entre dos grandes\n"
                    + "culturas: Japón y España. Con una interfaz elegante y\n"
                    + "funcionalidad avanzada, esta aplicación desarrollada en Java\n"
                    + "se ha diseñado para ofrecer una experiencia fluida y\n"
                    + "eficiente a nuestros valientes bomberos en ambos países.\n"
                    + "\n"
                    + "Esta innovadora herramienta ha sido desarrollada con el\n"
                    + "propósito de facilitar y mejorar su labor en situaciones\n"
                    + "de emergencia. Con la combinación perfecta de funcionalidad\n"
                    + "y elegancia, esta aplicación multilingüe ofrece una experiencia\n"
                    + "fluida tanto en español como en japonés.");
            presentacion.setFont(new java.awt.Font("Roboto", 0, 18));
            super.setBandera(true); // Establece la bandera en verdadero
        } else
        {
            // Si el idioma es falso (JP)

            // Configuración de la interfaz en japonés
            perfilUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("ユーザープロフ ァイル"));
            usuario.setText("ユーザー: ");
            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoJap.png")));
            email.setText("メール: ");
            sexo.setText("性別: ");
            archivo.setText("アーカイブ");
            idiomas.setText("語");
            salida.setText("ディスコネクト");
            salir.setText("アプリケーションを終了する");
            perfil.setText("ユーザープロフ ァイル");
            inicio.setText("ホーム");
            tipoBombero.setText("士ランク:");
            casos.setText("緊急事態");
            mensajes.setText("メッセージング");
            finalizar.setText("緊急事態の終了");
            info.setText("追加情報");
            info.setFont(new java.awt.Font("Dialog", 0, 18));
            finalizar.setFont(new java.awt.Font("Dialog", 0, 12));
            tipoBombero.setFont(new java.awt.Font("Dialog", 0, 18));
            mensajes.setFont(new java.awt.Font("Dialog", 0, 18));
            campoTipo.setFont(new java.awt.Font("Dialog", 0, 18));
            perfil.setFont(new java.awt.Font("Dialog", 0, 18));
            salir.setFont(new java.awt.Font("Dialog", 0, 18));
            presentacion.setFont(new java.awt.Font("Dialog", 0, 18));
            usuario.setFont(new java.awt.Font("Dialog", 0, 18));
            email.setFont(new java.awt.Font("Dialog", 0, 18));
            sexo.setFont(new java.awt.Font("Dialog", 0, 18));
            campoUsuario.setFont(new java.awt.Font("Dialog", 0, 18));
            campoEmail.setFont(new java.awt.Font("Dialog", 0, 18));
            campoSexo.setFont(new java.awt.Font("Dialog", 0, 18));
            inicio.setFont(new java.awt.Font("Dialog", 0, 18));
            casos.setFont(new java.awt.Font("Dialog", 0, 18));
            cambiarDatos();
            caso.setText("割り当てられたケース:");
            presentacion.setText("ようこそ！\n"
                    + "当社の革新的な消防アプリケーションへようこそ。\n"
                    + "このプロジェクトは、情熱と献身で作り上げられ、\n"
                    + "日本とスペインという2つの偉大な文化をつなぐ架け橋として\n"
                    + "ご提供いたします。洗練されたインターフェースと高度な機能を備えた\n"
                    + "このJavaで開発されたアプリケーションは、\n"
                    + "両国の勇敢な消防士にスムーズで効率的な体験を提供するように設計されています。\n"
                    + "\n"
                    + "この革新的なツールは、緊急事態での作業を円滑化し、\n向上させることを目的として開発されました。\n"
                    + "機能性とエレガンスの完璧な組み合わせで、この多言語対応アプリケーションは、\n"
                    + "スペイン語と日本語の両方でスムーズな体験を提供します。");
            super.setBandera(false); // Establece la bandera en falso
        }

    }

    @Override
    public AudioClip obtenerSonido() {
        // Obtener el sonido del botón
        AudioClip sonidoBoton;
        URL url = getClass().getResource("/sonidos/raton.wav");
        sonidoBoton = java.applet.Applet.newAudioClip(url);
        return sonidoBoton;
    }

    public void finalizarCaso() {
        // Método para finalizar un caso
        int valor;
        if (super.isBandera())
        {
            // Si el idioma es español
            valor = JOptionPane.showConfirmDialog(null, "¿Está usted seguro de finalizar el caso?", "Mensaje de pregunta", JOptionPane.YES_NO_OPTION);
            if (valor == JOptionPane.YES_OPTION)
            {
                cn.eliminarCaso(cn.devolverNombreCaso(cn.devolverIDCasoUsuario(nombreUsuario)), "ESP");
                cn.eliminarCasoUsuario(nombreUsuario);
                JOptionPane.showMessageDialog(null, "Emergencia finalizada con exito.", "Mensaje de información", JOptionPane.INFORMATION_MESSAGE);
            }
        } else
        {
            // Si el idioma es japonés
            valor = JOptionPane.showConfirmDialog(null, "ケースを終了してもよろしいですか？", "質問メッセージ", JOptionPane.YES_NO_OPTION);
            if (valor == JOptionPane.YES_OPTION)
            {
                cn.eliminarCaso(cn.devolverNombreCaso(cn.devolverIDCasoUsuario(nombreUsuario)), "JP");
                cn.eliminarCasoUsuario(nombreUsuario);
                JOptionPane.showMessageDialog(null, "緊急事態は正常に終了しました。", "情報メッセージ", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    @Override
    public void reproducirSonidoBoton() {
        // Reproducir el sonido del botón
        obtenerSonido().play();
    }

    @Override
    public void windowOpened(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void windowClosing(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void windowClosed(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void windowIconified(WindowEvent e) {
        if (super.isBandera())
        {
            JOptionPane.showMessageDialog(null, "Parece que usted esta inactivo " + nombreUsuario, "Mensaje informativo", JOptionPane.INFORMATION_MESSAGE);
        } else
        {
            JOptionPane.showMessageDialog(null, "あなたは非アクティブのようです、" + nombreUsuario + "さん", "情報メッセージ", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        if (super.isBandera())
        {
            JOptionPane.showMessageDialog(null, "Hola de nuevo " + nombreUsuario, "Mensaje de saludo", JOptionPane.INFORMATION_MESSAGE);
        } else
        {
            JOptionPane.showMessageDialog(null, "改めてこんにちは、" + nombreUsuario + "さん", "挨拶のメッセージ", JOptionPane.INFORMATION_MESSAGE);

        }
    }

    @Override
    public void windowActivated(WindowEvent e) {
        //nada
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
